<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Project Tetra â€“ How-To Guides</title><link>https://tetrabiodistributed.github.io/docs/how-to-guides/</link><description>Recent content in How-To Guides on Project Tetra</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 05 Jan 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://tetrabiodistributed.github.io/docs/how-to-guides/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Configuration Management</title><link>https://tetrabiodistributed.github.io/docs/how-to-guides/configuration-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tetrabiodistributed.github.io/docs/how-to-guides/configuration-management/</guid><description>
&lt;div class="paragraph">
&lt;div class="pageinfo pageinfo-primary">
&lt;div class="paragraph">
&lt;p>These guidelines assume that you&amp;#8217;re familiar with the GitHub workflow.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="paragraph">
&lt;p>We use a &lt;a href="https://www.writethedocs.org/videos/portland/2019/lessons-learned-in-a-year-of-docs-driven-development-jessica-parsons/">docs-driven development&lt;/a> approach, using the GitHub workflow, to facilitate configuration management for Project Tetra. The documentation for this project is maintained in the &lt;a href="https://github.com/tetrabiodistributed/tetrabiodistributed.github.io">Project Tetra docs repo&lt;/a> with the project source code maintained in the &lt;a href="https://github.com/helpfulengineering/project-tetra">Project Tetra repo&lt;/a>.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_how_to_make_changes_to_a_design">&lt;a class="anchor" href="#_how_to_make_changes_to_a_design">&lt;/a>&lt;a class="link" href="#_how_to_make_changes_to_a_design">How to make changes to a design&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="olist arabic">
&lt;ol class="arabic">
&lt;li>
&lt;p>Create a new working branch, or checkout an existing branch, in the &lt;a href="https://github.com/tetrabiodistributed/tetrabiodistributed.github.io">Project Tetra docs repo&lt;/a>. The branch name should describe the feature or component to be changed or implemented, e.g., &lt;code>tricoder-with-touchscreen&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Write or update the appropriate documentation files (i.e., &lt;a href="../../tutorials">Tutorials&lt;/a>, &lt;a href="../../how-to-guides">How-To Guides&lt;/a>, &lt;a href="../../explanations">Explanations&lt;/a>, and/or &lt;a href="../../references">References&lt;/a>) relevant to the design changes to be made. (See &lt;a href="#_how_to_write_good_documentation">How to write good documentation&lt;/a>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Commit the documentation changes to your working branch in the &lt;a href="https://github.com/tetrabiodistributed/tetrabiodistributed.github.io">Project Tetra docs repo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create a new working branch, or checkout an existing branch, in the &lt;a href="https://github.com/helpfulengineering/project-tetra">Project Tetra repo&lt;/a>. The branch name should describe the feature or component to be changed or implemented, e.g., &lt;code>tricoder-with-touchscreen&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Implement the design changes in the appropriate design files (e.g., STEP files, drawings, STL&amp;#8217;s, and/or code). Simultaneously, update the documentation as need be in your working branch on the &lt;a href="https://github.com/tetrabiodistributed/tetrabiodistributed.github.io">Project Tetra docs repo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Once satisfied with the design changes, update the P/N Registry and CHANGELOG. (See &lt;a href="#_how_to_document_a_part_number_release_hardware">How to document a part number release&lt;/a> and &lt;a href="#_how_to_document_a_version_release_software">How to document a version release&lt;/a>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Commit the design changes to your working branch in the &lt;a href="https://github.com/helpfulengineering/project-tetra">Project Tetra repo&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create a pull request for your working branches in the &lt;a href="https://github.com/tetrabiodistributed/tetrabiodistributed.github.io">Project Tetra docs repo&lt;/a> and &lt;a href="https://github.com/helpfulengineering/project-tetra">Project Tetra repo&lt;/a> to be merged into their respective main branch.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_how_to_write_good_documentation">&lt;a class="anchor" href="#_how_to_write_good_documentation">&lt;/a>&lt;a class="link" href="#_how_to_write_good_documentation">How to write good documentation&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>There are four types of documentation: &lt;a href="https://documentation.divio.com/tutorials">Tutorials&lt;/a>, &lt;a href="https://documentation.divio.com/how-to-guides/">How-To Guides&lt;/a>, &lt;a href="https://documentation.divio.com/reference/">References&lt;/a>, and &lt;a href="https://documentation.divio.com/explanation/#">Explanations&lt;/a>.
Consult the &lt;a href="https://documentation.divio.com/">The Documentation System&lt;/a> for:&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://documentation.divio.com/tutorials/#how-to-write-good-tutorials">How to write good tutorials&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://documentation.divio.com/how-to-guides/#how-to-write-good-how-to-guides">How to write good how-to guides&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://documentation.divio.com/reference/#how-to-write-good-reference-guides">How to write good reference guides&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://documentation.divio.com/explanation/#how-to-write-good-explanation">How to write good explanation&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_how_to_document_a_part_number_release_hardware">&lt;a class="anchor" href="#_how_to_document_a_part_number_release_hardware">&lt;/a>&lt;a class="link" href="#_how_to_document_a_part_number_release_hardware">How to document a part number release (hardware)&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Changes to a part number (P/N) should be made in the P/N Registry file, located in the root directory of the &lt;a href="https://github.com/helpfulengineering/project-tetra">Project Tetra repo&lt;/a>. Part numbers should adopt the following naming convention:&lt;/p>
&lt;/div>
&lt;div class="literalblock">
&lt;div class="content">
&lt;pre>A-TET-ZZZZZZ-R = Assembly
ZZZZZZ-R is Assembly Number &amp;amp; Revision
P-TET-ZZZZZZ-R = Part
ZZZZZZ-R is Part Number &amp;amp; Revision
M-YYY-ZZZZZ = Buy Part, M = Manufacturer, YYY = manufacturer code (ex, UNI = Unistrut)
ZZZZZ = Manufacturer part number
V-XXX-ZZZZZ = OTS part, V = Vendor, XXX = vendor code (ex, MCM = McMaster-Carr)
ZZZZ = Vendor part number&lt;/pre>
&lt;/div>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Note: In the event there is a design change to an interface used in an existing part, it is recommended to designate an entirely new part number, as opposed to bumping its revision number.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_how_to_document_a_version_release_software">&lt;a class="anchor" href="#_how_to_document_a_version_release_software">&lt;/a>&lt;a class="link" href="#_how_to_document_a_version_release_software">How to document a version release (software)&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Changes to a software version (i.e., a software release) should be reflected in the CHANGELOG file, located in the root directory in the &lt;a href="https://github.com/helpfulengineering/project-tetra">Project Tetra repo&lt;/a>. Software releases should also be &lt;a href="https://help.github.com/en/github/administering-a-repository/managing-releases-in-a-repository">tagged&lt;/a> and follow the &lt;a href="https://semver.org/">semantic versioning&lt;/a> system.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_useful_resources">&lt;a class="anchor" href="#_useful_resources">&lt;/a>&lt;a class="link" href="#_useful_resources">Useful resources&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.docsy.dev/docs/">Docsy user guide&lt;/a>: All about Docsy, including how it manages navigation, look and feel, and multi-language support.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://gohugo.io/documentation/">Hugo documentation&lt;/a>: Comprehensive reference for Hugo.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://guides.github.com/activities/hello-world/">Github Hello World!&lt;/a>: A basic introduction to GitHub concepts and workflow.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Docs: Contribution Guidelines</title><link>https://tetrabiodistributed.github.io/docs/how-to-guides/contribution-guidelines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tetrabiodistributed.github.io/docs/how-to-guides/contribution-guidelines/</guid><description>
&lt;div class="paragraph">
&lt;div class="pageinfo pageinfo-primary">
&lt;div class="paragraph">
&lt;p>These guidelines assume that you&amp;#8217;re familiar with the GitHub workflow.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_how_to_contribute">&lt;a class="anchor" href="#_how_to_contribute">&lt;/a>&lt;a class="link" href="#_how_to_contribute">How to Contribute&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>We use &lt;a href="https://gohugo.io/">Hugo&lt;/a> and &lt;a href="https://asciidoctor.org/"> Asciidoctor&lt;/a> to format and generate our website,
the &lt;a href="https://github.com/google/docsy">Docsy&lt;/a> theme for styling and site structure,
&lt;a href="https://graphviz.org/">Graphviz&lt;/a> and &lt;a href="https://plantuml.com/">plantuml&lt;/a> for rendering diagrams,
and &lt;a href="https://github.com/peaceiris/actions-gh-pages">GitHub Actions for GitHub Pages&lt;/a> to manage the deployment of the site.
Hugo is an open-source static site generator that provides us with templates,
content organisation in a standard directory structure, and a website generation engine.
You write the pages in Markdown (or HTML if you want), and Hugo wraps them up into a website.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>All submissions, including submissions by project members, require review.
We use GitHub pull requests for this purpose.
Consult &lt;a href="https://help.github.com/articles/about-pull-requests/">GitHub Help&lt;/a> for more information on using pull requests.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_updating_the_site">&lt;a class="anchor" href="#_updating_the_site">&lt;/a>&lt;a class="link" href="#_updating_the_site">Updating the site&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Here&amp;#8217;s a quick guide to updating the site:&lt;/p>
&lt;/div>
&lt;div class="olist arabic">
&lt;ol class="arabic">
&lt;li>
&lt;p>Fork the &lt;a href="https://github.com/tetrabiodistributed/tetrabiodistributed.github.io">Project Tetra docs repo&lt;/a> on GitHub.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Make your changes and create a pull request (PR).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you&amp;#8217;re not yet ready for a review, add "WIP" to the PR name to indicate
it&amp;#8217;s a work in progress.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Continue updating your doc and pushing your changes until you&amp;#8217;re happy with
the content.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When you&amp;#8217;re ready for a review, add a comment to the PR, and remove any
"WIP" markers.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_updating_a_single_page">&lt;a class="anchor" href="#_updating_a_single_page">&lt;/a>&lt;a class="link" href="#_updating_a_single_page">Updating a single page&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>If you&amp;#8217;ve just spotted something you&amp;#8217;d like to change while using the docs, Docsy has a shortcut for you:&lt;/p>
&lt;/div>
&lt;div class="olist arabic">
&lt;ol class="arabic">
&lt;li>
&lt;p>Click &lt;strong>Edit this page&lt;/strong> in the top right hand corner of the page.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you don&amp;#8217;t already have an up to date fork of the project repo, you are prompted to get one - click &lt;strong>Fork this repository and propose changes&lt;/strong> or &lt;strong>Update your Fork&lt;/strong> to get an up to date version of the project to edit. The appropriate page in your fork is displayed in edit mode.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Follow the rest of the &lt;a href="#_updating_the_site">Updating the site&lt;/a> process to propose your changes.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_previewing_your_changes">&lt;a class="anchor" href="#_previewing_your_changes">&lt;/a>&lt;a class="link" href="#_previewing_your_changes">Previewing your changes&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>If you want to preview your changes as you work, you&amp;#8217;ll need to run your own local Hugo server:&lt;/p>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_option_1_using_hugo_asciidoctor_recommended_for_linux_macos_users">&lt;a class="anchor" href="#_option_1_using_hugo_asciidoctor_recommended_for_linux_macos_users">&lt;/a>&lt;a class="link" href="#_option_1_using_hugo_asciidoctor_recommended_for_linux_macos_users">Option 1: Using Hugo + Asciidoctor (Recommended for Linux &amp;amp; MacOS users)&lt;/a>&lt;/h3>
&lt;div class="olist arabic">
&lt;ol class="arabic">
&lt;li>
&lt;p>Follow the instructions in &lt;a href="https://gohugo.io/getting-started/installing/">Getting started&lt;/a> to install Hugo and any other tools you need. You&amp;#8217;ll need at least &lt;strong>Hugo version 0.68.3&lt;/strong>.
If you install from the &lt;a href="https://github.com/gohugoio/hugo/releases">release page&lt;/a>,
make sure you download the &lt;code>_extended&lt;/code> version which supports SCSS.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You will also need to install &lt;a href="https://asciidoctor.org/">Asciidoctor&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fork the &lt;a href="https://github.com/tetrabiodistributed/tetrabiodistributed.github.io">Project Tetra docs repo&lt;/a> into your own project, then create a local copy using &lt;code>git clone&lt;/code>. Don&amp;#8217;t forget to use &lt;code>--recurse-submodules&lt;/code> or you won&amp;#8217;t pull down some of the code you need to generate a working site.&lt;/p>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre> git clone --recurse-submodules --depth 1 https://github.com/&amp;lt;your_github_username&amp;gt;/tetrabiodistributed.github.io.git&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Run &lt;code>serve.sh&lt;/code> script in the site root directory. By default your site will be available at &lt;code>http://localhost:1313&lt;/code>. Now that you&amp;#8217;re serving your site locally, Hugo will watch for changes to the content and automatically refresh your site.&lt;/p>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre> sh serve.sh&lt;/pre>
&lt;/div>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Note: You will also need Graphviz (2.38.0 recommended) and &lt;a href="https://plantuml.com/download">Plantuml&lt;/a> installed in order to be able to render UML diagrams.&lt;/p>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;/div>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_option_2_using_docker_recommended_for_windows_users">&lt;a class="anchor" href="#_option_2_using_docker_recommended_for_windows_users">&lt;/a>&lt;a class="link" href="#_option_2_using_docker_recommended_for_windows_users">Option 2: Using Docker (Recommended for Windows users)&lt;/a>&lt;/h3>
&lt;div class="olist arabic">
&lt;ol class="arabic">
&lt;li>
&lt;p>Install &lt;a href="https://www.docker.com/">docker&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fork the &lt;a href="https://github.com/tetrabiodistributed/tetrabiodistributed.github.io">Project Tetra docs repo&lt;/a> into your own project, then create a local copy using &lt;code>git clone&lt;/code>. Don&amp;#8217;t forget to use &lt;code>--recurse-submodules&lt;/code> or you won&amp;#8217;t pull down some of the code you need to generate a working site.&lt;/p>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre> git clone --recurse-submodules --depth 1 https://github.com/&amp;lt;your_github_username&amp;gt;/tetrabiodistributed.github.io.git&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Run the following command in the site root directory. By default your site will be available at &lt;code>http://localhost:1313&lt;/code>. Now that you&amp;#8217;re serving your site locally, Hugo will watch for changes to the content and automatically refresh your site.&lt;/p>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre> docker run --rm --volume $PWD:/src -p 1313:1313 -w "/src" bwklein/hugo-asciidoctor sh serve.sh&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_creating_an_issue">&lt;a class="anchor" href="#_creating_an_issue">&lt;/a>&lt;a class="link" href="#_creating_an_issue">Creating an issue&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>If you&amp;#8217;ve found a problem in the docs, but you&amp;#8217;re not sure how to fix it yourself, please create an issue in the &lt;a href="https://github.com/tetrabiodistributed/tetrabiodistributed.github.io/issues">Project Tetra docs repo&lt;/a>. You can also create an issue about a specific page by clicking the &lt;strong>Create Issue&lt;/strong> button in the top right hand corner of the page.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_useful_resources">&lt;a class="anchor" href="#_useful_resources">&lt;/a>&lt;a class="link" href="#_useful_resources">Useful resources&lt;/a>&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.docsy.dev/docs/">Docsy user guide&lt;/a>: All about Docsy, including how it manages navigation, look and feel, and multi-language support.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://gohugo.io/documentation/">Hugo documentation&lt;/a>: Comprehensive reference for Hugo.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://guides.github.com/activities/hello-world/">Github Hello World!&lt;/a>: A basic introduction to GitHub concepts and workflow.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div></description></item></channel></rss>